{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"executionInfo":{"elapsed":14762,"status":"ok","timestamp":1726888859278,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"Eq4My7V5RYJC","outputId":"6415193e-1122-4b5c-edff-52cf34d46cff"},"outputs":[{"data":{"text/html":["\n","     \u003cinput type=\"file\" id=\"files-b71ff4a9-b2b4-4261-84d0-fe69c7a8f43e\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" /\u003e\n","     \u003coutput id=\"result-b71ff4a9-b2b4-4261-84d0-fe69c7a8f43e\"\u003e\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      \u003c/output\u003e\n","      \u003cscript\u003e// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) =\u003e {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable\u003c!Object\u003e} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) =\u003e {\n","    inputElement.addEventListener('change', (e) =\u003e {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) =\u003e {\n","    cancel.onclick = () =\u003e {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) =\u003e {\n","      const reader = new FileReader();\n","      reader.onload = (e) =\u003e {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position \u003c fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","\u003c/script\u003e "],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Saving spare_parts_inventory_optimization.xlsx to spare_parts_inventory_optimization.xlsx\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import files\n","uploaded = files.upload()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":734,"status":"ok","timestamp":1726888866585,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"YS6CQD9MRyFE"},"outputs":[{"ename":"NameError","evalue":"name 'pd' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-2-e0cc2dd4c75f\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 1\u003e\u001b[0;34m()\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_excel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/spare_parts_inventory_optimization.xlsx'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}],"source":["df=pd.read_excel('/content/spare_parts_inventory_optimization.xlsx')\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":499,"status":"ok","timestamp":1726833297433,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"bfY9JqJgSBYn","outputId":"074bbf40-7ce5-4b0a-ef60-5355284f79fa"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Part_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Part_Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Motor\",\n          \"Bearing\",\n          \"Belt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current_Stock\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66,\n        \"min\": 30,\n        \"max\": 200,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          30,\n          75,\n          100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lead_Time_Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2,\n        \"max\": 15,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          15,\n          12,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Demand_Per_Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 8,\n        \"max\": 40,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8,\n          15,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unit_Cost\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 1,\n        \"max\": 100,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          100,\n          25,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Criticality_Score (1-5)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          2,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  \u003cdiv id=\"df-11467d0d-ff45-4023-8a4e-a7a20b4bef72\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003cth\u003ePart_Name\u003c/th\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003eMotor\u003c/td\u003e\n","      \u003ctd\u003e30\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e8\u003c/td\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003eBelt\u003c/td\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e8\u003c/td\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","      \u003ctd\u003eBolt\u003c/td\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e40\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11467d0d-ff45-4023-8a4e-a7a20b4bef72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-11467d0d-ff45-4023-8a4e-a7a20b4bef72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-11467d0d-ff45-4023-8a4e-a7a20b4bef72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-f9f35483-57c9-4046-8b17-0c1ae5f702a1\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9f35483-57c9-4046-8b17-0c1ae5f702a1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f9f35483-57c9-4046-8b17-0c1ae5f702a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","  \u003cdiv id=\"id_888dea7d-4f9d-4e06-9ed8-0c02dd0fc337\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_888dea7d-4f9d-4e06-9ed8-0c02dd0fc337 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["   Part_ID Part_Name  Current_Stock  Lead_Time_Days  Demand_Per_Month  \\\n","0        1      Gear             50              10                20   \n","1        2     Motor             30              15                 8   \n","2        3      Belt            100               5                25   \n","3        4      Bolt            200               2                40   \n","4        5   Bearing             75              12                15   \n","\n","   Unit_Cost  Criticality_Score (1-5)  \n","0         15                        5  \n","1        100                        4  \n","2          8                        3  \n","3          1                        2  \n","4         25                        5  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["df=df.head(5)\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":547,"status":"ok","timestamp":1726833475914,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"DPEYOzNFSV8z","outputId":"e448e5a5-a575-461d-be26-7dd169a7adfc"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Part_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5104848666672712,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0,\n          3.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current_Stock\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58.66704907255269,\n        \"min\": 5.0,\n        \"max\": 200.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          91.0,\n          75.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lead_Time_Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.326348001640354,\n        \"min\": 2.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          5.0,\n          8.8,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Demand_Per_Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.099767609878866,\n        \"min\": 5.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          21.6,\n          20.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unit_Cost\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.01090860660758,\n        \"min\": 1.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.8,\n          15.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Criticality_Score (1-5)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.427325603896438,\n        \"min\": 1.3038404810405297,\n        \"max\": 5.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0,\n          3.8,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  \u003cdiv id=\"df-6144217a-647f-4ec8-8664-ec9604ae5a3a\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e5.00000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003emean\u003c/th\u003e\n","      \u003ctd\u003e3.000000\u003c/td\u003e\n","      \u003ctd\u003e91.000000\u003c/td\u003e\n","      \u003ctd\u003e8.800000\u003c/td\u003e\n","      \u003ctd\u003e21.600000\u003c/td\u003e\n","      \u003ctd\u003e29.800000\u003c/td\u003e\n","      \u003ctd\u003e3.80000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003estd\u003c/th\u003e\n","      \u003ctd\u003e1.581139\u003c/td\u003e\n","      \u003ctd\u003e66.370174\u003c/td\u003e\n","      \u003ctd\u003e5.263079\u003c/td\u003e\n","      \u003ctd\u003e12.054045\u003c/td\u003e\n","      \u003ctd\u003e40.233071\u003c/td\u003e\n","      \u003ctd\u003e1.30384\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003emin\u003c/th\u003e\n","      \u003ctd\u003e1.000000\u003c/td\u003e\n","      \u003ctd\u003e30.000000\u003c/td\u003e\n","      \u003ctd\u003e2.000000\u003c/td\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","      \u003ctd\u003e1.000000\u003c/td\u003e\n","      \u003ctd\u003e2.00000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e25%\u003c/th\u003e\n","      \u003ctd\u003e2.000000\u003c/td\u003e\n","      \u003ctd\u003e50.000000\u003c/td\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e15.000000\u003c/td\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","      \u003ctd\u003e3.00000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e50%\u003c/th\u003e\n","      \u003ctd\u003e3.000000\u003c/td\u003e\n","      \u003ctd\u003e75.000000\u003c/td\u003e\n","      \u003ctd\u003e10.000000\u003c/td\u003e\n","      \u003ctd\u003e20.000000\u003c/td\u003e\n","      \u003ctd\u003e15.000000\u003c/td\u003e\n","      \u003ctd\u003e4.00000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e75%\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","      \u003ctd\u003e100.000000\u003c/td\u003e\n","      \u003ctd\u003e12.000000\u003c/td\u003e\n","      \u003ctd\u003e25.000000\u003c/td\u003e\n","      \u003ctd\u003e25.000000\u003c/td\u003e\n","      \u003ctd\u003e5.00000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003emax\u003c/th\u003e\n","      \u003ctd\u003e5.000000\u003c/td\u003e\n","      \u003ctd\u003e200.000000\u003c/td\u003e\n","      \u003ctd\u003e15.000000\u003c/td\u003e\n","      \u003ctd\u003e40.000000\u003c/td\u003e\n","      \u003ctd\u003e100.000000\u003c/td\u003e\n","      \u003ctd\u003e5.00000\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6144217a-647f-4ec8-8664-ec9604ae5a3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-6144217a-647f-4ec8-8664-ec9604ae5a3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6144217a-647f-4ec8-8664-ec9604ae5a3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-74b3d0fe-8793-4dba-ac7c-496954240027\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-74b3d0fe-8793-4dba-ac7c-496954240027')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74b3d0fe-8793-4dba-ac7c-496954240027 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["        Part_ID  Current_Stock  Lead_Time_Days  Demand_Per_Month   Unit_Cost  \\\n","count  5.000000       5.000000        5.000000          5.000000    5.000000   \n","mean   3.000000      91.000000        8.800000         21.600000   29.800000   \n","std    1.581139      66.370174        5.263079         12.054045   40.233071   \n","min    1.000000      30.000000        2.000000          8.000000    1.000000   \n","25%    2.000000      50.000000        5.000000         15.000000    8.000000   \n","50%    3.000000      75.000000       10.000000         20.000000   15.000000   \n","75%    4.000000     100.000000       12.000000         25.000000   25.000000   \n","max    5.000000     200.000000       15.000000         40.000000  100.000000   \n","\n","       Criticality_Score (1-5)  \n","count                  5.00000  \n","mean                   3.80000  \n","std                    1.30384  \n","min                    2.00000  \n","25%                    3.00000  \n","50%                    4.00000  \n","75%                    5.00000  \n","max                    5.00000  "]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"executionInfo":{"elapsed":455,"status":"ok","timestamp":1726833495654,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"z4spvFjQS7xx","outputId":"9c54bf35-6919-45fc-e53f-f0d7bd61842e"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePart_Name\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["Part_ID                    0\n","Part_Name                  0\n","Current_Stock              0\n","Lead_Time_Days             0\n","Demand_Per_Month           0\n","Unit_Cost                  0\n","Criticality_Score (1-5)    0\n","dtype: int64"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["df.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"executionInfo":{"elapsed":476,"status":"ok","timestamp":1726833590949,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"1idZDUVHTAni","outputId":"abd203c2-8e78-402d-e342-740bf68854ef"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003ctd\u003eint64\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003ePart_Name\u003c/th\u003e\n","      \u003ctd\u003eobject\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003ctd\u003eint64\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003ctd\u003eint64\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003ctd\u003eint64\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003ctd\u003eint64\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","      \u003ctd\u003eint64\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e object\u003c/label\u003e"],"text/plain":["Part_ID                     int64\n","Part_Name                  object\n","Current_Stock               int64\n","Lead_Time_Days              int64\n","Demand_Per_Month            int64\n","Unit_Cost                   int64\n","Criticality_Score (1-5)     int64\n","dtype: object"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":462,"status":"ok","timestamp":1726833658456,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"dVepNkxsTW4c","outputId":"815495c0-1002-49ab-d9b5-c5b261d1ca82"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Part_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Part_Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Motor\",\n          \"Bearing\",\n          \"Belt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current_Stock\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66,\n        \"min\": 30,\n        \"max\": 200,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          30,\n          75,\n          100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lead_Time_Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2,\n        \"max\": 15,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          15,\n          12,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Demand_Per_Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 8,\n        \"max\": 40,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8,\n          15,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unit_Cost\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 1,\n        \"max\": 100,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          100,\n          25,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Criticality_Score (1-5)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          2,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  \u003cdiv id=\"df-c8999edc-c987-499d-bd38-7102dddfece3\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003cth\u003ePart_Name\u003c/th\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003eMotor\u003c/td\u003e\n","      \u003ctd\u003e30\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e8\u003c/td\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003eBelt\u003c/td\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e8\u003c/td\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","      \u003ctd\u003eBolt\u003c/td\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e40\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8999edc-c987-499d-bd38-7102dddfece3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-c8999edc-c987-499d-bd38-7102dddfece3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c8999edc-c987-499d-bd38-7102dddfece3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-1387d26c-5789-4ae4-9a68-0e5fcbd12ac5\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-1387d26c-5789-4ae4-9a68-0e5fcbd12ac5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1387d26c-5789-4ae4-9a68-0e5fcbd12ac5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","  \u003cdiv id=\"id_4d397a13-2895-42ad-913a-2c796cac1f8e\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_4d397a13-2895-42ad-913a-2c796cac1f8e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["   Part_ID Part_Name  Current_Stock  Lead_Time_Days  Demand_Per_Month  \\\n","0        1      Gear             50              10                20   \n","1        2     Motor             30              15                 8   \n","2        3      Belt            100               5                25   \n","3        4      Bolt            200               2                40   \n","4        5   Bearing             75              12                15   \n","\n","   Unit_Cost  Criticality_Score (1-5)  \n","0         15                        5  \n","1        100                        4  \n","2          8                        3  \n","3          1                        2  \n","4         25                        5  "]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["df=df.drop_duplicates()\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"elapsed":492,"status":"ok","timestamp":1726834005737,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"ow3M_mNkUINL","outputId":"e03911f2-41c1-4921-efd4-6c7748385349"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eTotal_Stock_Value\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["0     750\n","1    3000\n","2     800\n","3     200\n","4    1875\n","Name: Total_Stock_Value, dtype: int64"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["# perform basic analysis\n","#calculate total value of stock for each part\n","df['Total_Stock_Value']=df['Current_Stock']*df['Unit_Cost']\n","df.groupby('Part_Name')['Total_Stock_Value'].sum().sort_values(ascending=False)\n","df['Total_Stock_Value']\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"elapsed":829,"status":"ok","timestamp":1726834240952,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"t8ePh5v_VTaB","outputId":"11392469-a13d-459d-eff0-3425744383fe"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eTurnover_Ratio\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e0.400000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e0.266667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e0.250000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e0.200000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e0.200000\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e float64\u003c/label\u003e"],"text/plain":["0    0.400000\n","1    0.266667\n","2    0.250000\n","3    0.200000\n","4    0.200000\n","Name: Turnover_Ratio, dtype: float64"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["# Inventory Turnover Ratio (how fast inventory is moving)\n","df['Turnover_Ratio'] = df['Demand_Per_Month'] / df['Current_Stock']\n","df['Turnover_Ratio']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"executionInfo":{"elapsed":1107,"status":"ok","timestamp":1726834584917,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"h9YlHYADWjZF","outputId":"4de2c668-78fd-49a1-8531-48bb1470963b"},"outputs":[{"name":"stderr","output_type":"stream","text":["\u003cipython-input-27-d9227f692c64\u003e:3: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x='Criticality_Score (1-5)', y='Current_Stock', data=df, palette='viridis') # Removed the leading tab and extra space in the column name\n"]},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 1200x600 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Visualize stock levels by part criticality\n","plt.figure(figsize=(12, 6))\n","sns.barplot(x='Criticality_Score (1-5)', y='Current_Stock', data=df, palette='viridis')\n","plt.title('Stock Levels by Criticality Score')\n","plt.xlabel('Criticality_Score (1-5)')\n","plt.ylabel('Current Stock')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":772,"status":"ok","timestamp":1726889215057,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"SQz05i0IXd5H","outputId":"2f8ea8e8-a846-4b8e-ed8b-9ad1efa26eb3"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eInventory_Value\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e5\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e6\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e7\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e8\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e9\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e10\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e11\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e12\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e13\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e14\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e16\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e17\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e18\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e19\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e20\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e21\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e22\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e23\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e24\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e25\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e26\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e27\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e28\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e29\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e30\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e31\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e32\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e33\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e34\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e35\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e36\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e37\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e38\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e39\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e40\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e41\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e42\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e43\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e44\u003c/th\u003e\n","      \u003ctd\u003e800\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e45\u003c/th\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e46\u003c/th\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e47\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e48\u003c/th\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e49\u003c/th\u003e\n","      \u003ctd\u003e3000\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["0      750\n","1     3000\n","2      800\n","3      200\n","4     1875\n","5     3000\n","6      750\n","7     3000\n","8      800\n","9      200\n","10    1875\n","11    3000\n","12     750\n","13    3000\n","14     800\n","15     200\n","16    1875\n","17    3000\n","18     750\n","19    3000\n","20     800\n","21     200\n","22    1875\n","23    3000\n","24     750\n","25    3000\n","26     800\n","27     200\n","28    1875\n","29    3000\n","30     750\n","31    3000\n","32     800\n","33     200\n","34    1875\n","35    3000\n","36     750\n","37    3000\n","38     800\n","39     200\n","40    1875\n","41    3000\n","42     750\n","43    3000\n","44     800\n","45     200\n","46    1875\n","47    3000\n","48     750\n","49    3000\n","Name: Inventory_Value, dtype: int64"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# a. Calculate the total inventory value for each part\n","df['Inventory_Value'] = df['Current_Stock'] * df['Unit_Cost']\n","df['Inventory_Value']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":662,"status":"ok","timestamp":1726889406315,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"zcP40oPJnj62","outputId":"6f9b69b5-2d1a-48c1-f049-e758adb64fda"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eReorder_Point\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e5\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e6\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e7\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e8\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e9\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e10\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e11\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e12\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e13\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e14\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e16\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e17\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e18\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e19\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e20\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e21\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e22\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e23\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e24\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e25\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e26\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e27\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e28\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e29\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e30\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e31\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e32\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e33\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e34\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e35\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e36\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e37\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e38\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e39\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e40\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e41\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e42\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e43\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e44\u003c/th\u003e\n","      \u003ctd\u003e4.166667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e45\u003c/th\u003e\n","      \u003ctd\u003e2.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e46\u003c/th\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e47\u003c/th\u003e\n","      \u003ctd\u003e8.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e48\u003c/th\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e49\u003c/th\u003e\n","      \u003ctd\u003e4.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e float64\u003c/label\u003e"],"text/plain":["0     6.666667\n","1     4.000000\n","2     4.166667\n","3     2.666667\n","4     6.000000\n","5     8.000000\n","6     6.666667\n","7     4.000000\n","8     4.166667\n","9     2.666667\n","10    6.000000\n","11    8.000000\n","12    6.666667\n","13    4.000000\n","14    4.166667\n","15    2.666667\n","16    6.000000\n","17    8.000000\n","18    6.666667\n","19    4.000000\n","20    4.166667\n","21    2.666667\n","22    6.000000\n","23    8.000000\n","24    6.666667\n","25    4.000000\n","26    4.166667\n","27    2.666667\n","28    6.000000\n","29    8.000000\n","30    6.666667\n","31    4.000000\n","32    4.166667\n","33    2.666667\n","34    6.000000\n","35    8.000000\n","36    6.666667\n","37    4.000000\n","38    4.166667\n","39    2.666667\n","40    6.000000\n","41    8.000000\n","42    6.666667\n","43    4.000000\n","44    4.166667\n","45    2.666667\n","46    6.000000\n","47    8.000000\n","48    6.666667\n","49    4.000000\n","Name: Reorder_Point, dtype: float64"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["# b. Calculate reorder point based on lead time demand (simplified)\n","df['Reorder_Point'] = df['Lead_Time_Days'] * (df['Demand_Per_Month'] / 30)\n","df['Reorder_Point']\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"executionInfo":{"elapsed":467,"status":"ok","timestamp":1726889495478,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"KcPWpg-Xn_7G","outputId":"5ca2921b-6655-4528-ebce-bf6f525b128e"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"critical_parts\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Part_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          1,\n          5,\n          17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Part_Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bearing\",\n          \"Gear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current_Stock\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 50,\n        \"max\": 75,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          75,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lead_Time_Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 10,\n        \"max\": 12,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          12,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Demand_Per_Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 15,\n        \"max\": 20,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          15,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unit_Cost\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 15,\n        \"max\": 25,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          25,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Criticality_Score (1-5)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 5,\n        \"max\": 5,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inventory_Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 578,\n        \"min\": 750,\n        \"max\": 1875,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reorder_Point\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34299717028501736,\n        \"min\": 6.0,\n        \"max\": 6.666666666666666,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"critical_parts"},"text/html":["\n","  \u003cdiv id=\"df-4a1f7efe-d5ed-438a-a401-da6ae2f1fe01\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003cth\u003ePart_Name\u003c/th\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","      \u003cth\u003eInventory_Value\u003c/th\u003e\n","      \u003cth\u003eReorder_Point\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e6\u003c/th\u003e\n","      \u003ctd\u003e7\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e10\u003c/th\u003e\n","      \u003ctd\u003e11\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e12\u003c/th\u003e\n","      \u003ctd\u003e13\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e16\u003c/th\u003e\n","      \u003ctd\u003e17\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e18\u003c/th\u003e\n","      \u003ctd\u003e19\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e22\u003c/th\u003e\n","      \u003ctd\u003e23\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e24\u003c/th\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e28\u003c/th\u003e\n","      \u003ctd\u003e29\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e30\u003c/th\u003e\n","      \u003ctd\u003e31\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e34\u003c/th\u003e\n","      \u003ctd\u003e35\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e36\u003c/th\u003e\n","      \u003ctd\u003e37\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e40\u003c/th\u003e\n","      \u003ctd\u003e41\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e42\u003c/th\u003e\n","      \u003ctd\u003e43\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e46\u003c/th\u003e\n","      \u003ctd\u003e47\u003c/td\u003e\n","      \u003ctd\u003eBearing\u003c/td\u003e\n","      \u003ctd\u003e75\u003c/td\u003e\n","      \u003ctd\u003e12\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e25\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1875\u003c/td\u003e\n","      \u003ctd\u003e6.000000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e48\u003c/th\u003e\n","      \u003ctd\u003e49\u003c/td\u003e\n","      \u003ctd\u003eGear\u003c/td\u003e\n","      \u003ctd\u003e50\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003e20\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e750\u003c/td\u003e\n","      \u003ctd\u003e6.666667\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a1f7efe-d5ed-438a-a401-da6ae2f1fe01')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-4a1f7efe-d5ed-438a-a401-da6ae2f1fe01 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4a1f7efe-d5ed-438a-a401-da6ae2f1fe01');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-503aa138-40ca-48d0-beb7-c5d823485d4d\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-503aa138-40ca-48d0-beb7-c5d823485d4d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-503aa138-40ca-48d0-beb7-c5d823485d4d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","  \u003cdiv id=\"id_ee995931-4f40-4d1f-8fc4-28e2318b7091\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('critical_parts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_ee995931-4f40-4d1f-8fc4-28e2318b7091 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('critical_parts');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["    Part_ID Part_Name  Current_Stock  Lead_Time_Days  Demand_Per_Month  \\\n","0         1      Gear             50              10                20   \n","4         5   Bearing             75              12                15   \n","6         7      Gear             50              10                20   \n","10       11   Bearing             75              12                15   \n","12       13      Gear             50              10                20   \n","16       17   Bearing             75              12                15   \n","18       19      Gear             50              10                20   \n","22       23   Bearing             75              12                15   \n","24       25      Gear             50              10                20   \n","28       29   Bearing             75              12                15   \n","30       31      Gear             50              10                20   \n","34       35   Bearing             75              12                15   \n","36       37      Gear             50              10                20   \n","40       41   Bearing             75              12                15   \n","42       43      Gear             50              10                20   \n","46       47   Bearing             75              12                15   \n","48       49      Gear             50              10                20   \n","\n","    Unit_Cost  Criticality_Score (1-5)  Inventory_Value  Reorder_Point  \n","0          15                        5              750       6.666667  \n","4          25                        5             1875       6.000000  \n","6          15                        5              750       6.666667  \n","10         25                        5             1875       6.000000  \n","12         15                        5              750       6.666667  \n","16         25                        5             1875       6.000000  \n","18         15                        5              750       6.666667  \n","22         25                        5             1875       6.000000  \n","24         15                        5              750       6.666667  \n","28         25                        5             1875       6.000000  \n","30         15                        5              750       6.666667  \n","34         25                        5             1875       6.000000  \n","36         15                        5              750       6.666667  \n","40         25                        5             1875       6.000000  \n","42         15                        5              750       6.666667  \n","46         25                        5             1875       6.000000  \n","48         15                        5              750       6.666667  "]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["# Step 3: Identify critical parts (Criticality Score = 5)\n","critical_parts = df[df['Criticality_Score (1-5)'] == 5]\n","critical_parts"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WZyo0iwcoiLz"},"outputs":[],"source":["# Step 4: Identify parts that need replenishment (Current stock \u003c Reorder point)\n","replenish_parts = df[df['Current_Stock'] \u003c df['Reorder_Point']]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"executionInfo":{"elapsed":678,"status":"ok","timestamp":1726889651747,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"XRZ6vmGPouSO","outputId":"40bca4b0-fff9-4e6d-9bc1-f97a3af353ca"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"repr_error":"Out of range float values are not JSON compliant: nan","type":"dataframe","variable_name":"replenish_parts"},"text/html":["\n","  \u003cdiv id=\"df-71fb9670-a073-4b75-a77d-6d91fcb8c3eb\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ePart_ID\u003c/th\u003e\n","      \u003cth\u003ePart_Name\u003c/th\u003e\n","      \u003cth\u003eCurrent_Stock\u003c/th\u003e\n","      \u003cth\u003eLead_Time_Days\u003c/th\u003e\n","      \u003cth\u003eDemand_Per_Month\u003c/th\u003e\n","      \u003cth\u003eUnit_Cost\u003c/th\u003e\n","      \u003cth\u003eCriticality_Score (1-5)\u003c/th\u003e\n","      \u003cth\u003eInventory_Value\u003c/th\u003e\n","      \u003cth\u003eReorder_Point\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71fb9670-a073-4b75-a77d-6d91fcb8c3eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-71fb9670-a073-4b75-a77d-6d91fcb8c3eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-71fb9670-a073-4b75-a77d-6d91fcb8c3eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","  \u003cdiv id=\"id_b4e46e6c-b673-42c0-bfdb-73d3169d375f\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('replenish_parts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_b4e46e6c-b673-42c0-bfdb-73d3169d375f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('replenish_parts');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["Empty DataFrame\n","Columns: [Part_ID, Part_Name, Current_Stock, Lead_Time_Days, Demand_Per_Month, Unit_Cost, Criticality_Score (1-5), Inventory_Value, Reorder_Point]\n","Index: []"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["replenish_parts=df[df['Current_Stock']\u003cdf['Reorder_Point']]\n","replenish_parts"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"executionInfo":{"elapsed":768,"status":"ok","timestamp":1726889736021,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"O-EDMS70pOjj","outputId":"4005819e-f252-45bd-ffc5-b65dfc14f69f"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 800x400 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Visualize Inventory Value by Part\n","plt.figure(figsize=(8, 4))\n","sns.barplot(x='Part_Name', y='Inventory_Value', data=df)\n","plt.title('Inventory Value by Spare Part')\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"executionInfo":{"elapsed":633,"status":"ok","timestamp":1726890310486,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"HacIFCfjqGDV","outputId":"9f82314a-5234-48ff-abb1-7a9dc2773f4d"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 800x400 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Visualize Current Stock vs Demand\n","plt.figure(figsize=(8, 4))\n","sns.scatterplot(x='Current_Stock', y='Demand_Per_Month', hue='Criticality_Score (1-5)', data=df)\n","plt.title('Current Stock vs Monthly Demand')\n","plt.xlabel('Current Stock')\n","plt.ylabel('Demand Per Month')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":714,"status":"ok","timestamp":1726890474145,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"y_h13JsQsWfm","outputId":"057b4e58-bf83-43d3-921a-3b00ee1e671e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Spare Parts Inventory Data:\n","     Part_ID Part_Name  Current_Stock  Lead_Time_Days  Demand_Per_Month  \\\n","0         1      Gear             50              10                20   \n","1         2     Motor             30              15                 8   \n","2         3      Belt            100               5                25   \n","3         4      Bolt            200               2                40   \n","4         5   Bearing             75              12                15   \n","5         6     Valve             60              20                12   \n","6         7      Gear             50              10                20   \n","7         8     Motor             30              15                 8   \n","8         9      Belt            100               5                25   \n","9        10      Bolt            200               2                40   \n","10       11   Bearing             75              12                15   \n","11       12     Valve             60              20                12   \n","12       13      Gear             50              10                20   \n","13       14     Motor             30              15                 8   \n","14       15      Belt            100               5                25   \n","15       16      Bolt            200               2                40   \n","16       17   Bearing             75              12                15   \n","17       18     Valve             60              20                12   \n","18       19      Gear             50              10                20   \n","19       20     Motor             30              15                 8   \n","20       21      Belt            100               5                25   \n","21       22      Bolt            200               2                40   \n","22       23   Bearing             75              12                15   \n","23       24     Valve             60              20                12   \n","24       25      Gear             50              10                20   \n","25       26     Motor             30              15                 8   \n","26       27      Belt            100               5                25   \n","27       28      Bolt            200               2                40   \n","28       29   Bearing             75              12                15   \n","29       30     Valve             60              20                12   \n","30       31      Gear             50              10                20   \n","31       32     Motor             30              15                 8   \n","32       33      Belt            100               5                25   \n","33       34      Bolt            200               2                40   \n","34       35   Bearing             75              12                15   \n","35       36     Valve             60              20                12   \n","36       37      Gear             50              10                20   \n","37       38     Motor             30              15                 8   \n","38       39      Belt            100               5                25   \n","39       40      Bolt            200               2                40   \n","40       41   Bearing             75              12                15   \n","41       42     Valve             60              20                12   \n","42       43      Gear             50              10                20   \n","43       44     Motor             30              15                 8   \n","44       45      Belt            100               5                25   \n","45       46      Bolt            200               2                40   \n","46       47   Bearing             75              12                15   \n","47       48     Valve             60              20                12   \n","48       49      Gear             50              10                20   \n","49       50     Motor             30              15                 8   \n","\n","    Unit_Cost  Criticality_Score (1-5)  Inventory_Value  Reorder_Point  \n","0          15                        5              750       6.666667  \n","1         100                        4             3000       4.000000  \n","2           8                        3              800       4.166667  \n","3           1                        2              200       2.666667  \n","4          25                        5             1875       6.000000  \n","5          50                        4             3000       8.000000  \n","6          15                        5              750       6.666667  \n","7         100                        4             3000       4.000000  \n","8           8                        3              800       4.166667  \n","9           1                        2              200       2.666667  \n","10         25                        5             1875       6.000000  \n","11         50                        4             3000       8.000000  \n","12         15                        5              750       6.666667  \n","13        100                        4             3000       4.000000  \n","14          8                        3              800       4.166667  \n","15          1                        2              200       2.666667  \n","16         25                        5             1875       6.000000  \n","17         50                        4             3000       8.000000  \n","18         15                        5              750       6.666667  \n","19        100                        4             3000       4.000000  \n","20          8                        3              800       4.166667  \n","21          1                        2              200       2.666667  \n","22         25                        5             1875       6.000000  \n","23         50                        4             3000       8.000000  \n","24         15                        5              750       6.666667  \n","25        100                        4             3000       4.000000  \n","26          8                        3              800       4.166667  \n","27          1                        2              200       2.666667  \n","28         25                        5             1875       6.000000  \n","29         50                        4             3000       8.000000  \n","30         15                        5              750       6.666667  \n","31        100                        4             3000       4.000000  \n","32          8                        3              800       4.166667  \n","33          1                        2              200       2.666667  \n","34         25                        5             1875       6.000000  \n","35         50                        4             3000       8.000000  \n","36         15                        5              750       6.666667  \n","37        100                        4             3000       4.000000  \n","38          8                        3              800       4.166667  \n","39          1                        2              200       2.666667  \n","40         25                        5             1875       6.000000  \n","41         50                        4             3000       8.000000  \n","42         15                        5              750       6.666667  \n","43        100                        4             3000       4.000000  \n","44          8                        3              800       4.166667  \n","45          1                        2              200       2.666667  \n","46         25                        5             1875       6.000000  \n","47         50                        4             3000       8.000000  \n","48         15                        5              750       6.666667  \n","49        100                        4             3000       4.000000  \n","\n","Critical Parts (Criticality Score 5):\n","     Part_ID Part_Name  Current_Stock  Lead_Time_Days  Demand_Per_Month  \\\n","0         1      Gear             50              10                20   \n","4         5   Bearing             75              12                15   \n","6         7      Gear             50              10                20   \n","10       11   Bearing             75              12                15   \n","12       13      Gear             50              10                20   \n","16       17   Bearing             75              12                15   \n","18       19      Gear             50              10                20   \n","22       23   Bearing             75              12                15   \n","24       25      Gear             50              10                20   \n","28       29   Bearing             75              12                15   \n","30       31      Gear             50              10                20   \n","34       35   Bearing             75              12                15   \n","36       37      Gear             50              10                20   \n","40       41   Bearing             75              12                15   \n","42       43      Gear             50              10                20   \n","46       47   Bearing             75              12                15   \n","48       49      Gear             50              10                20   \n","\n","    Unit_Cost  Criticality_Score (1-5)  Inventory_Value  Reorder_Point  \n","0          15                        5              750       6.666667  \n","4          25                        5             1875       6.000000  \n","6          15                        5              750       6.666667  \n","10         25                        5             1875       6.000000  \n","12         15                        5              750       6.666667  \n","16         25                        5             1875       6.000000  \n","18         15                        5              750       6.666667  \n","22         25                        5             1875       6.000000  \n","24         15                        5              750       6.666667  \n","28         25                        5             1875       6.000000  \n","30         15                        5              750       6.666667  \n","34         25                        5             1875       6.000000  \n","36         15                        5              750       6.666667  \n","40         25                        5             1875       6.000000  \n","42         15                        5              750       6.666667  \n","46         25                        5             1875       6.000000  \n","48         15                        5              750       6.666667  \n","\n","Parts Needing Immediate Replenishment:\n"," Empty DataFrame\n","Columns: [Part_ID, Part_Name, Current_Stock, Lead_Time_Days, Demand_Per_Month, Unit_Cost, Criticality_Score (1-5), Inventory_Value, Reorder_Point]\n","Index: []\n"]}],"source":["# Print results\n","print(\"Spare Parts Inventory Data:\\n\", df)\n","print(\"\\nCritical Parts (Criticality Score 5):\\n\", critical_parts)\n","print(\"\\nParts Needing Immediate Replenishment:\\n\", replenish_parts)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":462},"executionInfo":{"elapsed":1241,"status":"ok","timestamp":1726891354370,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"},"user_tz":-330},"id":"4g6Us--WvI1n","outputId":"dd9bf618-1983-4b3e-946e-4f3760c9c4ed"},"outputs":[{"name":"stderr","output_type":"stream","text":["\u003cipython-input-18-a5fc04f751c4\u003e:3: MatplotlibDeprecationWarning: The seaborn styles shipped by Matplotlib are deprecated since 3.6, as they no longer correspond to the styles shipped by seaborn. However, they will remain available as 'seaborn-v0_8-\u003cstyle\u003e'. Alternatively, directly use the seaborn API instead.\n","  plt.style.use('seaborn-darkgrid') # Corrected style name\n"]},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 800x400 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(8,4))\n","plt.style.use('ggplot')\n","plt.style.use('seaborn-darkgrid') # Corrected style name\n","sns.lineplot(x='Demand_Per_Month',y='Unit_Cost', data=df) # Added data parameter\n","plt.title('Demand vs Unit Cost')\n","plt.xlabel('Demand Per Month')\n","plt.ylabel('Unit Cost')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H4yd4ApLvuFf"},"outputs":[],"source":[]}],"metadata":{"colab":{"authorship_tag":"ABX9TyMYW9Varvzlfe6AGxdvJngn","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}