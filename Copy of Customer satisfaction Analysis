{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNtDFuOhpDrLOrDThxdfdv8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"G8_oYFE5JhtM","executionInfo":{"status":"ok","timestamp":1727670191705,"user_tz":-330,"elapsed":12931,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"04aacb21-899a-4d5c-a23c-b29d671ba109"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-9ec994fe-1618-4bd1-996e-ade436bcbc03\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-9ec994fe-1618-4bd1-996e-ade436bcbc03\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving customer_satisfaction_dataset.csv to customer_satisfaction_dataset (1).csv\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from google.colab import files\n","uploaded=files.upload()"]},{"cell_type":"code","source":["df=pd.read_csv(\"/content/customer_satisfaction_dataset.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"RxXJEy9kJ0z6","executionInfo":{"status":"ok","timestamp":1727670196451,"user_tz":-330,"elapsed":432,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"9a872a8d-793f-4f39-b87c-b7a3456e9f64"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Customer_ID  Product_ID Purchase_Date  Rating  Delivery_Time_Days  \\\n","0           1102         464    01-01-2023       1                   3   \n","1           1435         104    02-01-2023       5                  13   \n","2           1860         218    03-01-2023       3                   4   \n","3           1270         388    04-01-2023       5                  14   \n","4           1106         473    05-01-2023       1                   7   \n","..           ...         ...           ...     ...                 ...   \n","995         1009         191    22-09-2025       5                   9   \n","996         1823         452    23-09-2025       4                   8   \n","997         1797         158    24-09-2025       2                   4   \n","998         1241         158    25-09-2025       5                  13   \n","999         1250         403    26-09-2025       4                   1   \n","\n","     Product_Quality_Issues Return_Status  Support_Tickets  \n","0                         0            No                2  \n","1                         0            No                1  \n","2                         0            No                2  \n","3                         0            No                4  \n","4                         0            No                2  \n","..                      ...           ...              ...  \n","995                       0            No                1  \n","996                       0            No                3  \n","997                       0            No                1  \n","998                       0            No                0  \n","999                       0           Yes                0  \n","\n","[1000 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-63a54b9c-35b9-459b-a461-5a9e71be916b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer_ID</th>\n","      <th>Product_ID</th>\n","      <th>Purchase_Date</th>\n","      <th>Rating</th>\n","      <th>Delivery_Time_Days</th>\n","      <th>Product_Quality_Issues</th>\n","      <th>Return_Status</th>\n","      <th>Support_Tickets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1102</td>\n","      <td>464</td>\n","      <td>01-01-2023</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1435</td>\n","      <td>104</td>\n","      <td>02-01-2023</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1860</td>\n","      <td>218</td>\n","      <td>03-01-2023</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1270</td>\n","      <td>388</td>\n","      <td>04-01-2023</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1106</td>\n","      <td>473</td>\n","      <td>05-01-2023</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>1009</td>\n","      <td>191</td>\n","      <td>22-09-2025</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>1823</td>\n","      <td>452</td>\n","      <td>23-09-2025</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>1797</td>\n","      <td>158</td>\n","      <td>24-09-2025</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>1241</td>\n","      <td>158</td>\n","      <td>25-09-2025</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>1250</td>\n","      <td>403</td>\n","      <td>26-09-2025</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63a54b9c-35b9-459b-a461-5a9e71be916b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63a54b9c-35b9-459b-a461-5a9e71be916b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63a54b9c-35b9-459b-a461-5a9e71be916b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2824d3a5-d740-4908-8d13-bc6a3a2af2b1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2824d3a5-d740-4908-8d13-bc6a3a2af2b1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2824d3a5-d740-4908-8d13-bc6a3a2af2b1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7fc00e62-ff2e-40f2-b093-c0d5e3d18ba9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7fc00e62-ff2e-40f2-b093-c0d5e3d18ba9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Customer_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 289,\n        \"min\": 1000,\n        \"max\": 1998,\n        \"num_unique_values\": 615,\n        \"samples\": [\n          1246,\n          1255,\n          1057\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 116,\n        \"min\": 100,\n        \"max\": 499,\n        \"num_unique_values\": 359,\n        \"samples\": [\n          433,\n          359,\n          255\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase_Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"05-06-2024\",\n          \"07-01-2025\",\n          \"10-01-2025\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Delivery_Time_Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 14,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          9,\n          10,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product_Quality_Issues\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Return_Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Support_Tickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["print(df.head(5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wIghsUmYKeXE","executionInfo":{"status":"ok","timestamp":1727670220133,"user_tz":-330,"elapsed":597,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"67221f8a-6a3a-4948-adea-22ab815b03f7"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["   Customer_ID  Product_ID Purchase_Date  Rating  Delivery_Time_Days  \\\n","0         1102         464    01-01-2023       1                   3   \n","1         1435         104    02-01-2023       5                  13   \n","2         1860         218    03-01-2023       3                   4   \n","3         1270         388    04-01-2023       5                  14   \n","4         1106         473    05-01-2023       1                   7   \n","\n","   Product_Quality_Issues Return_Status  Support_Tickets  \n","0                       0            No                2  \n","1                       0            No                1  \n","2                       0            No                2  \n","3                       0            No                4  \n","4                       0            No                2  \n"]}]},{"cell_type":"code","source":["print(df.tail(5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WSXE2azAK3B3","executionInfo":{"status":"ok","timestamp":1727670230420,"user_tz":-330,"elapsed":410,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"6a92ff73-c2c0-455f-8b50-b789d6ff5d3a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["     Customer_ID  Product_ID Purchase_Date  Rating  Delivery_Time_Days  \\\n","995         1009         191    22-09-2025       5                   9   \n","996         1823         452    23-09-2025       4                   8   \n","997         1797         158    24-09-2025       2                   4   \n","998         1241         158    25-09-2025       5                  13   \n","999         1250         403    26-09-2025       4                   1   \n","\n","     Product_Quality_Issues Return_Status  Support_Tickets  \n","995                       0            No                1  \n","996                       0            No                3  \n","997                       0            No                1  \n","998                       0            No                0  \n","999                       0           Yes                0  \n"]}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"Yw-8J370K5ks","executionInfo":{"status":"ok","timestamp":1727670254917,"user_tz":-330,"elapsed":393,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"ccbb6263-ae22-405c-89c7-02cfeb91a9f2"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Customer_ID               0\n","Product_ID                0\n","Purchase_Date             0\n","Rating                    0\n","Delivery_Time_Days        0\n","Product_Quality_Issues    0\n","Return_Status             0\n","Support_Tickets           0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Customer_ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Product_ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Purchase_Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Rating</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Delivery_Time_Days</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Product_Quality_Issues</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Return_Status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Support_Tickets</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["print(df.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FwDVg-YiK_kh","executionInfo":{"status":"ok","timestamp":1727670399907,"user_tz":-330,"elapsed":437,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"1bd65f97-3745-4554-9458-421b9f64182c"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["       Customer_ID   Product_ID       Rating  Delivery_Time_Days  \\\n","count  1000.000000  1000.000000  1000.000000         1000.000000   \n","mean   1503.929000   298.040000     3.056000            7.451000   \n","std     289.998108   116.557231     1.422282            4.050186   \n","min    1000.000000   100.000000     1.000000            1.000000   \n","25%    1242.750000   197.000000     2.000000            4.000000   \n","50%    1505.000000   300.000000     3.000000            7.000000   \n","75%    1757.250000   401.000000     4.000000           11.000000   \n","max    1998.000000   499.000000     5.000000           14.000000   \n","\n","       Product_Quality_Issues  Support_Tickets  \n","count             1000.000000      1000.000000  \n","mean                 0.210000         1.962000  \n","std                  0.407512         1.429195  \n","min                  0.000000         0.000000  \n","25%                  0.000000         1.000000  \n","50%                  0.000000         2.000000  \n","75%                  0.000000         3.000000  \n","max                  1.000000         4.000000  \n"]}]},{"cell_type":"code","source":["# analysis the average rating per product and using astype(int) for whole number\n","avg_rating =df.groupby('Product_ID')['Rating'].mean().reset_index()\n","avg_rating['Rating']=avg_rating['Rating'].astype(int)\n","avg_rating"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"585dpDV8Lunz","executionInfo":{"status":"ok","timestamp":1727670743849,"user_tz":-330,"elapsed":451,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"735ec5ae-e925-4790-d09f-65f242136831"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Product_ID  Rating\n","0           100       3\n","1           101       5\n","2           102       1\n","3           103       2\n","4           104       3\n","..          ...     ...\n","354         495       5\n","355         496       3\n","356         497       2\n","357         498       2\n","358         499       3\n","\n","[359 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-e005a07b-6872-4a1e-9529-b52fdaa9b66b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_ID</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>101</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>102</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>103</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>104</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>354</th>\n","      <td>495</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>355</th>\n","      <td>496</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>356</th>\n","      <td>497</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>357</th>\n","      <td>498</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>358</th>\n","      <td>499</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>359 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e005a07b-6872-4a1e-9529-b52fdaa9b66b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e005a07b-6872-4a1e-9529-b52fdaa9b66b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e005a07b-6872-4a1e-9529-b52fdaa9b66b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fa50ab87-8f2c-4f89-a589-b2005ee46aca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa50ab87-8f2c-4f89-a589-b2005ee46aca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fa50ab87-8f2c-4f89-a589-b2005ee46aca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3ff69b85-8751-4c2e-bea9-3c63a155f344\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('avg_rating')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3ff69b85-8751-4c2e-bea9-3c63a155f344 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('avg_rating');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"avg_rating","summary":"{\n  \"name\": \"avg_rating\",\n  \"rows\": 359,\n  \"fields\": [\n    {\n      \"column\": \"Product_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 100,\n        \"max\": 499,\n        \"num_unique_values\": 359,\n        \"samples\": [\n          350,\n          146,\n          418\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# distibution of rating\n","plt.figure(figsize=(8,6))\n","sns.countplot(x='Rating', data=df, palette='viridis')\n","plt.title('Distribution of Customer Ratings')\n","plt.xlabel('Rating') #Fixed typo here\n","plt.ylabel('Count')\n","\n","# Get the current axes object\n","ax = plt.gca()\n","\n","# Adding counts on top of the bars\n","for p in ax.patches:\n","    ax.annotate(f'{int(p.get_height())}',\n","                (p.get_x() + p.get_width() / 2., p.get_height()),\n","                ha='center', va='bottom',\n","                fontsize=10,\n","                color='black')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"KqgF_NndTXnQ","executionInfo":{"status":"ok","timestamp":1727672767012,"user_tz":-330,"elapsed":1646,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"a26e693b-2cb0-4690-ef04-d0d13421cb00"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-13-a365d594d5f7>:3: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.countplot(x='Rating', data=df, palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"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SrfffrsWLVqku+66S+Hh4WrXrp2kX/81oH///jp27JjuuecetWnTRlu3blV8fLxOnDihefPmOdxXYmKizpw5o5iYGHl4eMjf379S70txcbGOHj2qJk2aOLSvWLFCp0+f1n333aemTZvq888/14IFC3T06FGtWLFCknTPPffo+PHjSklJ0TvvvFPha44ePVrt2rXT7Nmz9cUXX+jvf/+7AgIC9MILL9j7REdHa/ny5Ro3bpyuv/56bdmyRcOHDy9zrnvvvVcrV65UXFycQkNDdfLkSX366afat2+frr322kq9F0C94ux0DeDSXGzk1rIsy9fX1+revbt9//cjd3PnzrUkWT/++ON5z7Fz584yo3Xn9O/f35JkLVq0qNxj5Y3cXnHFFVZeXp69ffny5ZYka/78+fa2iozcXqy2349erl692pJkPfPMMw797rjjDstms1kHDhywt0my3N3dHdr+85//WJKsBQsWlLnWb82bN8+SZC1evNjedvbsWSs8PNxq3Lixw72fb9Tw9x588EFL0gVHIH+roiO3l/L8z549awUEBFhXXXWV9csvv9jb161bZ0mynnzySYd6JFnPPfecve3nn3+2PD09LZvNZi1dutTe/s0335QZiXz66actLy8v69tvv3Wo4S9/+Yvl6upqH/k/N3Lr4+NjZWVlnfeefis4ONgaPHiw9eOPP1o//vijtWfPHmvcuHH20fvf+u0I7TmzZ8+2bDab9cMPP9jbYmNjy4yQn/P7ezv3TP70pz859Lvtttuspk2b2vfT0tIsSdbUqVMd+kVHR5c5p6+vb5nagcsBqyUAl4HGjRtfcNWEcyNra9asUWlpaZWu4eHhoQkTJlS4/1133SVvb2/7/h133KGWLVvqgw8+qNL1K+qDDz6Qq6urpkyZ4tD+5z//WZZl6cMPP3Roj4iIUIcOHez73bp1k4+Pj/7f//t/F71OYGCgxo4da29r0KCBpkyZovz8fG3ZsqXStefl5UmSw/tWHS7l+e/atUtZWVm6//77HeaRDh8+XF26dNH7779f5jV33323w7U7d+4sLy8vjR492t7euXNn+fn5ObzPK1asUN++fdWkSRP99NNP9i0iIkIlJSVKTU11uM6oUaPOOwpeng0bNqh58+Zq3ry5rr76ar3zzjuaMGGCXnrpJYd+v/2XhYKCAv3000+64YYbZFmWvvzyywpfrzz33nuvw37fvn118uRJ+7NPTk6WJN1///0O/SZPnlzmXH5+ftqxY4eOHz9+STUB9Q3hFrgM5OfnXzAQ/fGPf1SfPn109913q0WLFhozZoyWL19eqaBzxRVXVOrDY1deeaXDvs1mU8eOHXXo0KEKn6MqfvjhBwUFBZV5P0JCQuzHf6tNmzZlztGkSRP9/PPPF73OlVdeKRcXx1+z57tORfj4+EhStS3vds6lPP9z99G5c+cyx7p06VLmPhs2bFgmcPr6+qpVq1Zl1l729fV1eJ+/++47JScn2wPouS0iIkLSrx/M+61z0xkqqnfv3kpJSVFycrLmzJkjPz8//fzzz2X+XB8+fFjR0dHy9/dX48aN1bx5c/Xv31+SlJubW6lr/t7v/7ydmxJx7n344Ycf5OLiUubeOnbsWOZcL774otLT09W6dWtdd911mjlz5kX/UgaYgDm3gOGOHj2q3Nzccv/nd46np6dSU1P18ccf6/3331dycrKWLVumm266SRs2bJCrq+tFr1OZebIVdb4vmigpKalQTdXhfNexnLCKYpcuXSRJe/bs0TXXXHPR/hd6/36rOp5/RZ3vXBV5n0tLS3XzzTfrkUceKbdvp06dHPYr+2eyWbNm9qA8ZMgQdenSRbfccovmz5+vadOmSfr1vbv55puVnZ2t6dOnq0uXLvLy8tKxY8cUHR1d5X/5OKc6/7yNHj1affv21apVq7Rhwwa99NJLeuGFF/Tee+8pMjLykuoE6jJGbgHDnfswy5AhQy7Yz8XFRYMGDdIrr7yir7/+Ws8++6w2bdqkjz/+WNL5g1JVfffddw77lmXpwIEDDt8m1qRJE+Xk5JR57e9HAytTW3BwsI4fP15m9PObb76xH68OwcHB+u6778qEnUu5TmRkpFxdXbV48eIK9a/o+ydV/fmfu4/9+/eXObZ///5qez8lqUOHDsrPz1dERES5W3mj7Jdi+PDh6t+/v5577jkVFBRI+vUvFt9++61efvllTZ8+XbfeeqsiIiIUFBRU5vU18S2AwcHBKi0t1cGDBx3aDxw4UG7/li1b6v7779fq1at18OBBNW3aVM8++2y11wXUJYRbwGCbNm3S008/rXbt2ikqKuq8/bKzs8u0nRsZLCwslCR5eXlJUrlhqSrefvtth4C5cuVKnThxwmFEqUOHDtq+fbv9iyAkad26dTpy5IjDuSpT27Bhw1RSUqKFCxc6tM+dO1c2m63aRrSGDRumjIwMLVu2zN5WXFysBQsWqHHjxvZ/xq6M1q1ba9KkSdqwYYMWLFhQ5nhpaalefvllHT16VNKv719ubq6++uore58TJ05o1apVDq+7lOffs2dPBQQEaNGiRfa+0q8rO+zbt6/cT/FX1ejRo7Vt2zatX7++zLGcnBwVFxdX27XOmT59uk6ePKm//e1vkv5vZPW3I6mWZWn+/PllXlvdPzPS//0l9bXXXnNo//2fh5KSkjJTJAICAhQUFOTwnAATMS0BMMSHH36ob775RsXFxcrMzNSmTZuUkpKi4OBgrV279oKLxs+aNUupqakaPny4goODlZWVpddee02tWrXSjTfeKOnXoOTn56dFixbJ29tbXl5e6t27d6XnNZ7j7++vG2+8URMmTFBmZqbmzZunjh07OixXdvfdd2vlypUaOnSoRo8ere+//16LFy92+IBXZWsbMWKEBg4cqMcee0yHDh1SWFiYNmzYoDVr1mjq1Kllzl1VMTEx+utf/6ro6GilpaWpbdu2WrlypT777DPNmzevyh8Ke/nll/X9999rypQpeu+993TLLbeoSZMmOnz4sFasWKFvvvlGY8aMkSSNGTNG06dP12233aYpU6bo9OnTev3119WpUyd98cUX9nNe6vN/4YUXNGHCBPXv319jx461LwXWtm1bPfjgg5f+Zv7Xww8/rLVr1+qWW25RdHS0evTooYKCAu3Zs0crV67UoUOH1KxZs2q7nvTraPlVV12lV155RbGxserSpYs6dOighx56SMeOHZOPj4/+9a9/lTsHu0ePHpKkKVOmaMiQIXJ1dbU/m6rq0aOHRo0apXnz5unkyZP2pcC+/fZbSf83Wnzq1Cm1atVKd9xxh8LCwtS4cWN99NFH2rlzp15++eVLqgGo85y3UAOA6nBuKbBzm7u7uxUYGGjdfPPN1vz58x2WnDrn90tBbdy40br11lutoKAgy93d3QoKCrLGjh1bZsmlNWvWWKGhoZabm1u5X+JQnvMtBfbPf/7Tio+PtwICAixPT09r+PDhDssonfPyyy9bV1xxheXh4WH16dPH2rVrV5lzXqi28pbDOnXqlPXggw9aQUFBVoMGDawrr7zygl/i8HvnW6Ls9zIzM60JEyZYzZo1s9zd3a2rr7663OXKKroU2DnF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\n"},"metadata":{}}]},{"cell_type":"code","source":["# delivery time vs product quality issues\n","quality_vs_delivery =df.groupby(\"Product_Quality_Issues\")[\"Delivery_Time_Days\"].mean().reset_index()\n","quality_vs_delivery"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"E85BfkY0VsjU","executionInfo":{"status":"ok","timestamp":1727673157340,"user_tz":-330,"elapsed":8,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"d449e120-f726-472c-ca9d-dc8b1f85464f"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Product_Quality_Issues  Delivery_Time_Days\n","0                       0            7.417722\n","1                       1            7.576190"],"text/html":["\n","  <div id=\"df-6bb9aff1-bcba-4592-8cdd-ba5e983f73d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product_Quality_Issues</th>\n","      <th>Delivery_Time_Days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>7.417722</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>7.576190</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bb9aff1-bcba-4592-8cdd-ba5e983f73d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6bb9aff1-bcba-4592-8cdd-ba5e983f73d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6bb9aff1-bcba-4592-8cdd-ba5e983f73d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-692cfec4-acab-48fe-8011-774e6da5f9f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-692cfec4-acab-48fe-8011-774e6da5f9f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-692cfec4-acab-48fe-8011-774e6da5f9f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_05a77414-cced-4eb9-aa91-19280043f6bf\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('quality_vs_delivery')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_05a77414-cced-4eb9-aa91-19280043f6bf button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('quality_vs_delivery');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"quality_vs_delivery","summary":"{\n  \"name\": \"quality_vs_delivery\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Product_Quality_Issues\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Delivery_Time_Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11205447424589725,\n        \"min\": 7.417721518987341,\n        \"max\": 7.576190476190476,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7.576190476190476,\n          7.417721518987341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# delivery time vs product quality issues\n","plt.figure(figsize=(8,6))\n","sns.barplot(x=\"Product_Quality_Issues\", y=\"Delivery_Time_Days\", data=quality_vs_delivery, palette=\"viridis\")\n","plt.title(\"Average Delivery Time by Product Quality Issues\")\n","plt.xlabel(\"Product Quality Issues (0 = No, 1=yes\")\n","plt.ylabel(\"Average Delivery Time (Days)\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"grW_l78JWQVn","executionInfo":{"status":"ok","timestamp":1727673652123,"user_tz":-330,"elapsed":1842,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"9b950bc1-6895-4bc8-9232-1381d77c468b"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-21-4c208c9f5239>:3: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x=\"Product_Quality_Issues\", y=\"Delivery_Time_Days\", data=quality_vs_delivery, palette=\"viridis\")\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# return status vs rating\n","return_vs_rating=df.groupby(\"Return_Status\")[\"Rating\"].mean().reset_index()\n","return_vs_rating\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"qiaIzvdPYPhU","executionInfo":{"status":"ok","timestamp":1727674003746,"user_tz":-330,"elapsed":482,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"71421ed2-6123-48e4-9877-3b627abd209d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Return_Status    Rating\n","0            No  3.042458\n","1           Yes  3.171429"],"text/html":["\n","  <div id=\"df-cb3dd3f9-ef5e-4f5c-95a2-6190f08d359c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Return_Status</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>No</td>\n","      <td>3.042458</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Yes</td>\n","      <td>3.171429</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb3dd3f9-ef5e-4f5c-95a2-6190f08d359c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb3dd3f9-ef5e-4f5c-95a2-6190f08d359c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb3dd3f9-ef5e-4f5c-95a2-6190f08d359c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-876f8715-4ce5-4557-8e7c-9fd610199246\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-876f8715-4ce5-4557-8e7c-9fd610199246')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-876f8715-4ce5-4557-8e7c-9fd610199246 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3217a501-22ce-4930-852a-b0f1eb281526\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('return_vs_rating')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3217a501-22ce-4930-852a-b0f1eb281526 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('return_vs_rating');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"return_vs_rating","summary":"{\n  \"name\": \"return_vs_rating\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Return_Status\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09119589452493701,\n        \"min\": 3.042458100558659,\n        \"max\": 3.1714285714285713,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3.1714285714285713,\n          3.042458100558659\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# return vs rating\n","plt.figure(figsize=(8,5))\n","sns.lineplot(x=\"Return_Status\", y=\"Rating\", data=return_vs_rating, marker=\"o\", color=\"blue\")\n","plt.title(\"Average Rating by Return Status\")\n","plt.xlabel(\"Return Status\")\n","plt.ylabel(\"Average Rating\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"FIBeCfbiYp5C","executionInfo":{"status":"ok","timestamp":1727674008280,"user_tz":-330,"elapsed":634,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"312657ed-76ef-4955-8d73-bcbc0cbad874"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"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gLVq1SrLsiwrNjbWKlSokNW/f3/nNStXrrQA67///W+c1zZt2tQqXry4sz137lzLzc3N+vHHH+NcN2PGDAuwNm7c6OwDLDc3N2vfvn131XTt2rU47Rs3blhly5a16tat6+zbvn27BVgDBgyIc22XLl0swBo2bJizr1u3blb+/Pmtixcvxrm2ffv2lq+v713v909Fixa1GjZsaF24cMG6cOGCtWfPHqtjx44WYPXu3fu+tVuWZYWEhFgOh8M6ceKEs693797Wvf7T+s/6hw0bZgHWiy++GOe6Z555xsqVK5eznZjvJD5r1661AKtgwYJWZGSks/+rr76yAGvSpEnOvqCgIKtatWpxXr9o0SILsNauXXvf97n9eQ4dOmRduHDBOn78uPXpp59aXl5elp+fnxUVFWVZlvlZLFGihNWoUSMrNjbW+fpr165ZxYoVsxo0aODsGzt2rAVYx44di/Nex44dswBr9uzZd9Vxr+/5ueeeu+vaokWLWoC1YcMGZ194eLjl6elpvfrqq/f9vNeuXbMCAwMtwCpatKjVpUsXa9asWdb58+fvuvZ+PxcJ+X1hWZaVNWtWq3Pnzne9vnPnzlbRokXv6r/9uW/74IMPLMC6cOHCfT+XiCvSlAYRFzVv3jzy5s3Lk08+CZi/Em3Xrh2hoaHExMQAULduXXLnzs2CBQucr7t06RKrVq2iXbt2zr6vv/6aUqVKUbJkSS5evOh81K1bF4C1a9fGee86depQunTpu2ry8vKK8z4RERE8/vjj7Nixw9l/e/rDf/7znziv7du3b5y2ZVksXLiQp556Csuy4tTVqFEjIiIi4tz3Xr7//nv8/Pzw8/OjXLlyzJ07l65duzJ27Nh71h4VFcXFixepUaMGlmWxc+fOf32f++nZs2ec9uOPP86ff/5JZGQkkPDv5N906tSJbNmyOdtt2rQhf/78LFu2LM41W7ZsiTP9YN68eRQuXJg6deok6H0CAwPx8/PD39+fF198kYCAAJYvX85DDz0EwK5du/jtt994/vnn+fPPP53/3qKioqhXrx4bNmwgNjY2UZ8tIf75Pd9WunRp57QLMCPIgYGB/P777/e9n5eXF1u2bHFOu5gzZw7dunUjf/789O3b967pPve7z233+n2RHLJnzw7At99+myLfr0hapsAr4oJiYmIIDQ3lySef5NixYxw5coQjR45QrVo1zp8/z5o1awDIlCkTrVu35ttvv3X+4bxo0SJu3rwZJ/D+9ttv7Nu3zxkMbz8eeeQRAMLDw+O8f7FixeKtKywsjOrVq5MlSxZy5syJn58f06dPJyIiwnnNiRMncHNzu+seAQEBcdoXLlzg8uXLfPTRR3fVdXte8j/rik+1atVYtWoVK1asYNy4cWTPnp1Lly7FmeIBcPLkSbp06ULOnDnx9vbGz8/PGQDvrD8pihQpEqd9+6/+L126BCT8O/k3JUqUiNN2OBwEBAQ4pxwAtGvXDk9PT+d874iICMLCwujQocM9/8r+nxYuXMiqVauYP38+1atXJzw8PE6o++233wDo3LnzXf/uPvnkE6Kjox/4O43PvX4u//n9g/l3cPv7vx9fX1/GjBnjnFc8a9YsAgMDmTJlCu+++26C6krI74vk0K5dO2rWrMlLL71E3rx5ad++PV999ZXCr2QImsMr4oJ++OEHzp49S2hoKKGhoXc9P2/ePBo2bAhA+/btmTlzJsuXL6dly5Z89dVXlCxZkgoVKjivj42NpVy5ckyYMCHe9ytcuHCc9p3h5rYff/yRFi1aULt2baZNm0b+/PnJnDkzs2fPZv78+Yn+jLf/kH7hhRfo3LlzvNeUL1/+X++TO3du6tevD0CjRo0oWbIkzZs3Z9KkSQwcOBAw/wPRoEED/vrrL1577TVKlixJ1qxZOX36NF26dHngwODu7h5vv3XHPNPUkiNHDpo3b868efN4++23+eabb4iOjo6zk8W/qV27tnO+7VNPPUW5cuXo0KED27dvx83Nzfl9jR07looVK8Z7D29v7/u+x73C9+2/vYhPfD+XkHzff9GiRXnxxRd55plnKF68OPPmzeO9996772uS4/dFQr8LLy8vNmzYwNq1a/nuu+9YsWIFCxYsoG7dunz//ff3/B5EXIECr4gLmjdvHnny5HGuDL/TokWLWLx4MTNmzMDLy4vatWuTP39+FixYQK1atfjhhx94880347zm4Ycf5tdff6VevXoJHuX7p4ULF5IlSxZWrlyJp6ens3/27NlxritatCixsbEcO3YszojkP/cQ9vPzI1u2bMTExDgDa3Jo1qwZderUYeTIkfTo0YOsWbOyZ88eDh8+zGeffUanTp2c165atequ1yf1+7mfhH4n/+b2yOptlmVx5MiRu/7HoFOnTjz99NNs3bqVefPmUalSpfsu3rofb29vhg0bRteuXfnqq69o3769c7GVj4/Pv/67u9f3eXsU/J/78544cSJJdSanHDly8PDDD7N3715n370+R0J/X9zvHjly5Ih3n+L4vgs3Nzfq1atHvXr1mDBhAiNHjuTNN99k7dq1yfr7SCSt0ZQGERfz999/s2jRIpo3b06bNm3uevTp04crV66wdOlSwPwB2KZNG/773/8yd+5cbt26FWc6A5hdBE6fPh3vYQx///03UVFR/1qXu7s7DocjzqjT8ePH79rhoVGjRoA5Ie5OkydPvut+rVu3ZuHChXGCxW1JWcV/22uvvcaff/7p/Ly3R77uHPGzLItJkybd9drbe7sm50EJCf1O/s3nn3/OlStXnO1vvvmGs2fP0qRJkzjXNWnShNy5czN69GjWr1+fqNHd+HTo0IFChQo5d52oXLkyDz/8MOPGjePq1at3XX/nv7t7fZ8+Pj7kzp2bDRs2xOn/53eUkn799VcuXrx4V/+JEyfYv38/gYGBzr57fY6E/r64fY/4fq4efvhhIiIi2L17t7Pv7NmzLF68OM51f/31112vvT3CntD5xiLplUZ4RVzM0qVLuXLlCi1atIj3+erVq+Pn58e8efOcwbZdu3ZMnjyZYcOGUa5cOUqVKhXnNR07duSrr76iZ8+erF27lpo1axITE8PBgwf56quvWLlyJVWqVLlvXc2aNWPChAk0btyY559/nvDwcKZOnUpAQECcP6grV65M69atmThxIn/++adzC67bp1bdOco1atQo1q5dS7Vq1ejevTulS5fmr7/+YseOHaxevTreP+ATokmTJpQtW5YJEybQu3dvSpYsycMPP8ygQYM4ffo0Pj4+LFy4MN45npUrVwagX79+NGrUCHd3d+f2bkmVmO/kfnLmzEmtWrXo2rUr58+fZ+LEiQQEBNx1wEbmzJlp3749U6ZMwd3dneeee+6B6s+cOTP9+/dn8ODBrFixgsaNG/PJJ5/QpEkTypQpQ9euXSlYsCCnT59m7dq1+Pj48N///tf52QHefPNN2rdvT+bMmXnqqafImjUrL730EqNGjeKll16iSpUqbNiwIc7pZilt1apVDBs2jBYtWlC9enW8vb35/fff+fTTT4mOjo6zF/C9fi4S+vvi9j1Wr17NhAkTKFCgAMWKFaNatWq0b9+e1157jWeeeYZ+/fpx7do1pk+fziOPPBJn4duIESPYsGEDzZo1o2jRooSHhzNt2jQKFSrk3JdYxGXZt0GEiKSEp556ysqSJYtzC6j4dOnSxcqcObNzO6/Y2FircOHCFmC999578b7mxo0b1ujRo60yZcpYnp6eVo4cOazKlStb77zzjhUREeG8jni29Lpt1qxZVokSJSxPT0+rZMmS1uzZs+/aOsmyLCsqKsrq3bu3lTNnTsvb29tq2bKldejQIQuwRo0aFefa8+fPW71797YKFy5sZc6c2cqXL59Vr14966OPPvrX76po0aJWs2bN4n1uzpw5cba92r9/v1W/fn3L29vbyp07t9W9e3fr119/vWtrrFu3bll9+/a1/Pz8LIfDEeezcY/tsv65TdTs2bPv2oorMd/JP93eluzLL7+0goODrTx58lheXl5Ws2bN4mypdqdffvnFAqyGDRve9953utfnsSzLioiIsHx9fa06deo4+3bu3Gm1atXKypUrl+Xp6WkVLVrUatu2rbVmzZo4r3333XetggULWm5ubnG+l2vXrlndunWzfH19rWzZsllt27a1wsPDE/w9W9a9fwbq1KkTp9b4/P7779bbb79tVa9e3cqTJ4+VKVMmy8/Pz2rWrJn1ww8/xLn2fj8XCf19cfDgQat27dqWl5eXBcTZouz777+3ypYta3l4eFiBgYHWF198cdc91qxZYz399NNWgQIFLA8PD6tAgQLWc889Zx0+fPi+n1PEFTgsy4ZVESIiibRr1y4qVarEF198QYcOHewuJ01Iye/k119/pWLFinz++ed07NgxWe8tIpLaNIdXRNKcO4/rvW3ixIm4ublRu3ZtGyqyX2p/Jx9//DHe3t60atUq2e8tIpLaNIdXRNKcMWPGsH37dp588kkyZcrE8uXLWb58OS+//PJdW6BlFKn1nfz3v/9l//79fPTRR/Tp08e52EpEJD3TlAYRSXNWrVrFO++8w/79+7l69SpFihShY8eOvPnmm2TKlDH/Pz21vhN/f3/Onz9Po0aNmDt3bpyT2URE0isFXhERERFxaZrDKyIiIiIuTYFXRERERFxaxpwM9y9iY2M5c+YM2bJlS5FjQkVERETkwViWxZUrVyhQoABubvcfw1XgjceZM2cy7EpwERERkfTk1KlTFCpU6L7XKPDG4/aq5FOnTuHj42NzNSIiIiLyT5GRkRQuXDhB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CtSrV49y5crx7LPP8vHHH9uylkmB1wa1a9emUaNGBAcH212KiIiISKJkypSJTJkyAXD16lWeeuopdu3aFefx22+/Ubt2bdzd3Vm1ahXLly+ndOnSTJ48mcDAQI4dO5a6Nafqu4nTqFGjqFixIoGBgc6+UqVKsXHjxjjXbdy4kUceeQR3d/fULlFERETkvh599FEWLlyIv7+/MwT/k8PhoGbNmtSsWZO3336bokWLsnjxYgYOHJhqdWqE1yblypWjQ4cOfPjhh86+V199lTVr1vDuu+9y+PBhPvvsM6ZMmcKgQYNsrFREREQkfr179+avv/7iueeeY+vWrRw9epSVK1fStWtXYmJi2LJlCyNHjmTbtm2cPHmSRYsWceHCBUqVKpWqdSrw2mjEiBHExsY6248++ihfffUVoaGhlC1blrfffpsRI0bQpUsX+4oUERERuYcCBQqwceNGYmJiaNiwIeXKlWPAgAFkz54dNzc3fHx82LBhA02bNuWRRx5h6NChjB8/niZNmqRqndqlQURERERcmkZ4RURERMSlKfCKiIiIiEtT4BURERERl6bAKyIiIiIuTYFXRERERFyaAq+IiIiIuDQFXhERERFxaQq8IiIiIuLSFHhFRERExKUp8IqIJFKXLl1wOBw4HA4yZ85MsWLFGDJkCNevX0/wPdatW4fD4eDy5cspV2gCfPzxx1SoUAFvb2+yZ89OpUqVCAkJcT7fpUsXWrZsmej7Dh8+nIoVKyZfoSIiDyCT3QWIiKRHjRs3Zvbs2dy8eZPt27fTuXNnHA4Ho0ePTvVabt68SebMmRP9uk8//ZQBAwbw4YcfUqdOHaKjo9m9ezd79+5NgSpFROyjEV4RkSTw9PQkX758FC5cmJYtW1K/fn1WrVrlfD42NpaQkBCKFSuGl5cXFSpU4JtvvgHg+PHjPPnkkwDkyJEDh8NBly5dAPD392fixIlx3qtixYoMHz7c2XY4HEyfPp0WLVqQNWtW3n//feeI6ty5c/H398fX15f27dtz5cqVe36GpUuX0rZtW7p160ZAQABlypThueee4/333wfMKO1nn33Gt99+6xzRXrduHQCvvfYajzzyCA899BDFixfnrbfe4ubNmwDMmTOHd955h19//dX5ujlz5nD8+HEcDge7du1y1nD58uU497106RIdOnTAz88PLy8vSpQowezZsxP7r0dEJA6N8IqIPKC9e/eyadMmihYt6uwLCQnhiy++YMaMGZQoUYINGzbwwgsv4OfnR61atVi4cCGtW7fm0KFD+Pj44OXllaj3HD58OKNGjWLixIlkypSJTz/9lKNHj7JkyRLCwsK4dOkSbdu2ZdSoUc4A+0/58uVj/fr1nDhxIk7ttw0aNIgDBw4QGRnpDJ05c+YEIFu2bMyZM4cCBQqwZ88eunfvTrZs2RgyZAjt2rVj7969rFixgtWrVwPg6+vL+fPn//VzvfXWW+zfv5/ly5eTO3dujhw5wt9//52o70ZE5J8UeEVEkiAsLAxvb29u3bpFdHQ0bm5uTJkyBYDo6GhGjhzJ6tWrCQoKAqB48eL89NNPzJw5kzp16jiDY548eciePXui3//555+na9eucfpiY2OZM2cO2bJlA6Bjx46sWbPmnoF32LBhtGrVCn9/fx555BGCgoJo2rQpbdq0wc3NDW9vb7y8vIiOjiZfvnxxXjt06FDnr/39/Rk0aBChoaEMGTIELy8vvL29yZQp012v+zcnT56kUqVKVKlSxXlvEZEHpcArIpIETz75JNOnTycqKooPPviATJky0bp1awCOHDnCtWvXaNCgQZzX3Lhxg0qVKiXL+98OhHfy9/d3hl2A/PnzEx4efs975M+fn82bN7N37142bNjApk2b6Ny5M5988gkrVqzAze3es94WLFjAhx9+yNGjR7l69Sq3bt3Cx8fnwT4U0KtXL1q3bs2OHTto2LAhLVu2pEaNGg98XxHJ2DSHV0QkCbJmzUpAQAAVKlTg008/ZcuWLcyaNQuAq1evAvDdd9+xa9cu52P//v3Oebz34ubmhmVZcfpuz4395/v/0z8XrjkcDmJjY//1s5QtW5b//Oc/fPHFF6xatYpVq1axfv36e16/efNmOnToQNOmTQkLC2Pnzp28+eab3Lhx477vcztA3/n5/vnZmjRpwokTJ3jllVc4c+YM9erVY9CgQf/6GURE7keBV0TkAbm5ufHGG28wdOhQ/v77b0qXLo2npycnT54kICAgzqNw4cIAeHh4ABATExPnXn5+fpw9e9bZjoyM5NixY6n2WUqXLg1AVFQUYOr8Z4235yu/+eabVKlShRIlSnDixIk418T3Oj8/P4A4n+/OBWx3Xte5c2e++OILJk6cyEcfffTAn0tEMjZNaRARSQbPPvssgwcPZurUqQwaNIhBgwbxyiuvEBsbS61atYiIiGDjxo34+PjQuXNnihYtisPhICwsjKZNmzrnvdatW5c5c+bw1FNPkT17dt5++23c3d1TpOZevXpRoEAB6tatS6FChTh79izvvfcefn5+zrnH/v7+rFy5kkOHDpErVy58fX0pUaIEJ0+eJDQ0lKpVq/Ldd9+xePHiOPf29/fn2LFj7Nq1i0KFCpEtWza8vLyoXr06o0aNolixYoSHh8eZCwzw9ttvU7lyZcqUKUN0dDRhYWGUKlUqRT6/iGQcGuEVEUkGmTJlok+fPowZM4aoqCjeffdd3nrrLUJCQihVqhSNGzfmu+++o1ixYgAULFiQd955h9dff528efPSp08fAIKDg6lTpw7NmzenWbNmtGzZkocffjhFaq5fvz4///wzzz77LI888gitW7cmS5YsrFmzhly5cgHQvXt3AgMDqVKlCn5+fmzcuJEWLVrwyiuv0KdPHypWrMimTZt466234ty7devWNG7cmCeffBI/Pz++/PJLwOz9e+vWLSpXrsyAAQN477334rzOw8OD4OBgypcvT+3atXF3dyc0NDRFPr+IZBwO65+TxUREREREXIhGeEVERETEpSnwioiIiIhLU+AVEREREZemwCsiIiIiLk2BV0RERERcmgKviIiIiLg0BV4RERERcWkKvCIiIiLi0hR4RURERMSlKfCKiIiIiEtT4BURERERl/Z/9qPd9/4dsbYAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["# correlation between numeric fields\n","plt.figure(figsize=(8,6))\n","numeric_df = df.select_dtypes(include=['number'])\n","sns.heatmap(numeric_df.corr(), annot=True, cmap=\"coolwarm\", fmt=\".2f\")\n","plt.title(\"Heatmap of Correlation Between Fields\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":690},"id":"0S7r3jBnbydY","executionInfo":{"status":"ok","timestamp":1727674734810,"user_tz":-330,"elapsed":1845,"user":{"displayName":"gokulnath Karuppanan","userId":"12194540051256106515"}},"outputId":"bf156952-5096-4081-8b19-094eaa40764e"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"6G-xX3WAcE7C"},"execution_count":null,"outputs":[]}]}